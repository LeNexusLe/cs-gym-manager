// <auto-generated />
using System;
using GymManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GymManagement.Migrations
{
    [DbContext(typeof(GymDbContext))]
    partial class GymDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GymManagement.Models.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MemberId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("Attendances");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CheckInDate = new DateTime(2025, 6, 4, 22, 0, 0, 0, DateTimeKind.Utc),
                            MemberId = 1
                        },
                        new
                        {
                            Id = 2,
                            CheckInDate = new DateTime(2025, 5, 3, 22, 0, 0, 0, DateTimeKind.Utc),
                            MemberId = 2
                        },
                        new
                        {
                            Id = 3,
                            CheckInDate = new DateTime(2025, 6, 14, 22, 0, 0, 0, DateTimeKind.Utc),
                            MemberId = 2
                        },
                        new
                        {
                            Id = 4,
                            CheckInDate = new DateTime(2025, 5, 24, 22, 0, 0, 0, DateTimeKind.Utc),
                            MemberId = 1
                        });
                });

            modelBuilder.Entity("GymManagement.Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "jan.kowalski@example.com",
                            FirstName = "Jan",
                            LastName = "Kowalski",
                            Phone = "123456789"
                        },
                        new
                        {
                            Id = 2,
                            Email = "anna.nowak@example.com",
                            FirstName = "Anna",
                            LastName = "Nowak",
                            Phone = "987654321"
                        });
                });

            modelBuilder.Entity("GymManagement.Models.Membership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MemberId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("Memberships");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTime(2025, 7, 4, 22, 0, 0, 0, DateTimeKind.Utc),
                            MemberId = 1,
                            StartDate = new DateTime(2025, 6, 4, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateTime(2025, 6, 4, 22, 0, 0, 0, DateTimeKind.Utc),
                            MemberId = 2,
                            StartDate = new DateTime(2025, 5, 4, 22, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("GymManagement.Models.WorkoutPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DayOfWeek")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Exercise")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MemberId")
                        .HasColumnType("integer");

                    b.Property<int>("Reps")
                        .HasColumnType("integer");

                    b.Property<int>("Sets")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("WorkoutPlans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DayOfWeek = "Poniedziałek",
                            Exercise = "Przysiady",
                            MemberId = 1,
                            Reps = 12,
                            Sets = 3
                        },
                        new
                        {
                            Id = 2,
                            DayOfWeek = "Środa",
                            Exercise = "Martwy ciąg",
                            MemberId = 2,
                            Reps = 8,
                            Sets = 4
                        });
                });

            modelBuilder.Entity("GymManagement.Models.Attendance", b =>
                {
                    b.HasOne("GymManagement.Models.Member", "Member")
                        .WithMany("Attendances")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("GymManagement.Models.Membership", b =>
                {
                    b.HasOne("GymManagement.Models.Member", "Member")
                        .WithMany("Memberships")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("GymManagement.Models.WorkoutPlan", b =>
                {
                    b.HasOne("GymManagement.Models.Member", "Member")
                        .WithMany("WorkoutPlans")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("GymManagement.Models.Member", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("Memberships");

                    b.Navigation("WorkoutPlans");
                });
#pragma warning restore 612, 618
        }
    }
}
